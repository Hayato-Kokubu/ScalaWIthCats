monoid, semiGroup
たす , まとめる　という操作を一般かする

・二項演算 であって (足した結果が同じ型である)
・単位元がある
・結合則を満たす

Int の 足し算
Int の 掛け算
String の結合
List の結合


型A がMonoid であるとは
・メソッド   combine : (A, A) => A
・フィールド empty: A をもつ


associativeLaw
  結合則
identityLaw
  単位元

SemiGroup
  empty フィールドがない もの

自然数(0 を含まない)の足し算
空文字を含まない文字列の結合
空リストを含まないリスト    <- NonEmptyList はSemiGroup のimpl

Monoid ならば SemiGroup

2.3

*: (Boolean, Boolean) -> Boolean
      (b1, b2)       |->    b1 * b2

MonoidTester を使った結果・・・
((true,true,true,false),false)  =>   OR (= NOT AND)
((true,false,false,true),true)  =>  AND
((true,false,false,false),true) => NAND (= NOT XOR)
((false,true,true,false),false) =>  XOR

Boolean のMonoid は、本質的には OR と XOR  の2種類

